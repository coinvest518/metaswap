$custom-colors: (
	"primary": $primary,
	"danger": $danger,
	"success": $success,
	"warning": $warning,
	"info": $info,
);

$ease: cubic-bezier(0.38, 0.24, 0.28, 1.17);

// Switches style
.switch {
	position: relative;
	display: inline-block;
	cursor: pointer;
	margin-bottom: 0;

	// Hide input
	&__input {
		opacity: 0;
		visibility: hidden;
		width: 1px;
		height: 1px;
		background-color: transparent;
		pointer-events: none;
		position: absolute;
	}

	&__bg {
		position: absolute;
		width: 38px;
		height: 20px;
		display: flex;
		align-items: center;
		justify-content: space-between;
		top: 4px;
		left: 4px;
	}

	// Switch box
	&__box {
		padding: 3px;
		border-radius: 100px;
		position: relative;
		height: 26px;
		width: 48px;
		background-color: #e4ecfa;
		box-shadow: 0 0 10px transparent;
		transition: 0.4s all $ease;
		overflow: hidden;

		.dark-mode & {
			background-color: #565a69;
		}

		// Before for background changes
		&::before {
			content: "";
			width: 120%;
			height: 110%;
			position: absolute;
			top: -5%;
			left: -10%;
			border-radius: 100px;
			transform: translateX(-100%);
			transition: 0.3s ease all;
			will-change: transform, border-radius;
		}
		// Inner circle
		&-inner {
			position: absolute;
			width: 20px;
			height: 20px;
			border-radius: 100px;
			background-color: white;
			transform: translateX(0);
			box-shadow: 0 4px 20px rgba(white, 0.2);
			transition: 0.4s all $ease;
			overflow: hidden;

			&::after {
				content: "";
				height: 4px;
				width: 4px;
				border-radius: 10px;
				top: 8px;
				left: 8px;
				position: absolute;
				transform: translateX(-40px);
			}
		}
	}
	// Animation on check input
	&__input:checked ~ &__box > &__box-inner {
		animation: checkSwitch 0.4s $ease forwards;

		&::after {
			animation: checkSwitchAfter 0.4s $ease 0.2s forwards;
		}
	}
	// Animation on uncheck
	&__input:not(:checked) ~ &__box > &__box-inner {
		transform: translateX(-20px);
		animation: unCheckSwitch 0.4s $ease forwards;

		&::after {
			animation: unCheckSwitchAfter 0.4s $ease forwards;
		}
	}

	// Styles for all states
	@each $key, $value in $custom-colors {
		&--#{$key} &__box-inner::after {
			background-color: rgba($value, 0.6);
		}
		&--#{$key} &__input:checked ~ &__box {
			box-shadow: 0 8px 12px rgba($value, 0.1);

			&::before {
				transform: translateX(0);
				border-radius: 20px;
			}
		}

		&--#{$key} &__box::before {
			background-color: $value;
		}
	}
	// Switches text style
	&__desc {
		margin-left: 24px;
	}
}
@each $key, $value in $custom-colors {
	.#{$key}-color {
		color: $value;
	}
}

@keyframes checkSwitch {
	0% {
		transform: translateX(0);
	}
	50% {
		width: 36px;
		transform: translateX(0);
	}
	100% {
		width: 20px;
		transform: translateX(22px);
	}
}

@keyframes checkSwitchAfter {
	from {
		transform: translateX(-40px) scale(0.2);
	}
	to {
		transform: translateX(0) scale(1);
	}
}
@keyframes unCheckSwitchAfter {
	from {
		transform: translateX(0) scale(1);
	}
	to {
		transform: translateX(40px) scale(0.2);
	}
}
@keyframes unCheckSwitch {
	0% {
		width: 20px;
		transform: translateX(22px);
	}
	50% {
		width: 36px;
		transform: translateX(0);
	}
	100% {
		transform: translateX(0);
	}
}
